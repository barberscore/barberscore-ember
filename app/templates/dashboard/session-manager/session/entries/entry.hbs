<section>
  <section>
    <div class='panel panel-default'>
      <div class='panel-heading fixed-panel-header'>
        <ul class='list-inline pull-right'>
          <li>{{#bs-button disabled=isPrevDisabled onClick=(action 'previousItem' model)}}Previous{{/bs-button}}</li>
          <li>{{#bs-button disabled=isNextDisabled onClick=(action 'nextItem' model)}}Next{{/bs-button}}</li>
        </ul>
        <h4>
          {{model.group.name}}&nbsp;({{model.group.organization.shortName}}){{#if model.prelim}}&nbsp;&mdash;&nbsp;{{single-fixed model.prelim}}{{/if}}
        </h4>
      </div>
      <div class='panel-body'>
        <section>
          <p>Preferences</p>
          {{#bs-form
            formLayout="vertical"
            model=model
            as |form|
          }}
            {{!-- {{#form.element property='organization' useIcons=false as |el|}}
              {{#power-select
                options=representingOptions
                selected=el.value
                searchField='name'
                onchange=(perform autosave 'organization')
                placeholder="Enter District/Division/Affiliate Representation"
                allowClear=true
                disabled=isDisabled
                as |representing|
              }}
                Representing: {{representing.name}}
              {{/power-select}}
            {{/form.element}} --}}
            {{#form.element property='isEvaluation' as |el|}}
              {{#bs-button-group
                value=el.value
                type='radio'
                onchange=(perform autosave 'isEvaluation')
                disabled=isDisabled
                as |bg|
              }}
                {{#bg.button type='default' value=false disabled=isDisabled}}Skip Eval{{/bg.button}}
                {{#bg.button type='default' value=true disabled=isDisabled}}Include Eval{{/bg.button}}
              {{/bs-button-group}}
            {{/form.element}}
            {{#form.element property='isPrivate' as |el|}}
              {{#bs-button-group
                value=el.value
                type='radio'
                onchange=(perform autosave 'isPrivate')
                as |bg|
              }}
                {{#bg.button type='default' value=false disabled=isDisabled}}Make Scores Public{{/bg.button}}
                {{#bg.button type='default' value=true disabled=isDisabled}}Keep Scores Private{{/bg.button}}
              {{/bs-button-group}}
            {{/form.element}}
          {{/bs-form}}
        </section>
        <hr>
        <section>
          <p>Contests Entered</p>
          <div class='table-responsive'>
            <table class='table'>
              <thead>
                <tr>
                  <th>Include?</th>
                  <th>Name</th>
                </tr>
              </thead>
              <tbody>
                {{#each contestOptions as |contest|}}
                    <tr>
                      <td>
                        {{contestant-checkbox
                          contest=contest
                          contestants=model.contestants
                          model=model
                          isDisabled=isDisabled
                        }}
                      </td>
                      <td>{{contest.nomen}}</td>
                    </tr>
                {{else}}
                  <tr>
                    <td colspan=2>Loading&nbsp;{{fa-icon 'spinner' spin=true}}</td>
                  </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        </section>
        {{!-- <section>
        <p>
          Contests Entered
        </p>
          {{multiselect-checkboxes
            options=contestOptions
            labelProperty='awardName'
            valueProperty='id'
            selection=model.selectedContests
            updateSelectionValue=false
            disabled=isDisabled
            onchange=(action "updateSelection")
          }}
        </section> --}}
        <hr>
        <section>
          <div class='table-responsive'>
            <p>
              Song Repertory: {{model.repertoryCount}}
            </p>
            <table class='table'>
              <thead>
                <tr>
                  <th>Title</th>
                  <th>Arranger(s)</th>
                </tr>
              </thead>
              <tbody>
                {{#each sortedRepertories as |repertory|}}
                  <tr>
                    <td>{{repertory.chart.title}}</td>
                    <td>{{repertory.chart.arrangers}}</td>
                  </tr>
                {{else}}
                  <tr>
                    <td>(No songs in Repertory.)</td>
                  </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        </section>
        <hr>
        <section>
          <div class='table-responsive'>
            <p>
              Participants on Stage: {{model.participantCount}}
            </p>
            <table class='table'>
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Part</th>
                </tr>
              </thead>
              <tbody>
                {{#each sortedParticipants as |participant|}}
                  <tr>
                    <td>{{participant.member.person.nomen}}</td>
                    <td>{{#if participant.member.part}}{{participant.member.part}}{{else}}(Unknown){{/if}}</td>
                  </tr>
                {{else}}
                  <tr>
                    <td>(No participants selected.)</td>
                  </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        </section>
        <hr>
        <section>
          <div class='table-responsive'>
            <p>
              Expiring Members: {{model.expiringMembersCount}}
            </p>
            <table class='table'>
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Membership Expires</th>
                </tr>
              </thead>
              <tbody>
                {{#each sortedExpirations as |expiration|}}
                  <tr>
                    <td>{{expiration.member.person.nomen}}</td>
                    <td>{{moment-format expiration.member.person.duesThru 'LL'}}</td>
                  </tr>
                {{else}}
                  <tr>
                    <td>All Members Current.</td>
                  </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        </section>
      </div>
      <div class='panel-footer fixed-panel-footer'>
        <ul class='list-inline'>
          {{#if model.permissions.write}}
            {{#if (eq model.status 'New')}}
              <li>{{#bs-button type='primary' disabled=model.isError onClick=(action (mut inviteEntryModal) true)}}Invite Entry{{/bs-button}}</li>
              <li>{{#bs-button type='danger' disabled=model.isError onClick=(action (mut deleteEntryModal) true)}}Delete Entry{{/bs-button}}</li>
            {{else if (eq model.status 'Invited')}}
              <li>{{#bs-button type='primary' disabled=model.isError onClick=(action (mut submitEntryModal) true)}}Submit Entry{{/bs-button}}</li>
              <li>{{#bs-button type='danger' disabled=model.isError onClick=(action (mut declineEntryModal) true)}}Decline Entry{{/bs-button}}</li>
            {{else if (eq model.status 'Submitted')}}
              <li>{{#bs-button type='primary' disabled=model.isError onClick=(action (mut approveEntryModal) true)}}Approve Entry{{/bs-button}}</li>
              <li>{{#bs-button type='danger' disabled=model.isError onClick=(action (mut declineEntryModal) true)}}Decline Entry{{/bs-button}}</li>
            {{else if (eq model.status 'Approved')}}
              <li>{{#bs-button type='danger' disabled=model.isError onClick=(action (mut scratchEntryModal) true)}}Scratch Entry{{/bs-button}}</li>
            {{/if}}
          {{/if}}
          <li class='pull-right'><h4>Entry Status: <strong>{{model.status}}</strong></h4></li>
        </ul>
      </div>
    </div>
  </section>
</section>
<section>
  {{#bs-modal
    open=inviteEntryModal
    onHidden=(pipe-action (action (mut inviteEntryModal) false) (action (mut inviteEntryModalError) false))
    as |modal|
  }}
    {{#modal.header}}
      <h4>Invite Entry</h4>
    {{/modal.header}}
    {{#modal.body}}
      <p>
        This will invite {{model.group.name}} to the {{model.session.nomen}}.  The group contacts will
        be sent an email with the invite instructions.
      </p>
      {{#if inviteEntryModalError}}
      <p class='text-danger'>
        Could not invite group.  Check to see that the group contact has a valid email.  Otherwise, contact support.
      </p>
      {{/if}}
    {{/modal.body}}
    {{#modal.footer}}
      {{#bs-button onClick=(action modal.close) type="default"}}Cancel{{/bs-button}}
      {{#bs-button type='primary' onClick=(perform inviteEntry)}}
        {{#if inviteEntry.isRunning}}
          Inviting {{fa-icon "spinner" spin=true}}
        {{else}}
          Invite Entry
        {{/if}}
      {{/bs-button}}
    {{/modal.footer}}
  {{/bs-modal}}
</section>
<section>
  {{#bs-modal
    open=deleteEntryModal
    onHidden=(pipe-action (action (mut deleteEntryModal) false) (action (mut deleteEntryModalError) false))
    as |modal|
  }}
    {{#modal.header}}
      <h4>Delete Entry</h4>
    {{/modal.header}}
    {{#modal.body}}
      <p>
        This will delete the entry for {{model.group.name}}.  It can not be undone.
      </p>
      {{#if deleteEntryModalError}}
      <p class='text-danger'>
        Could not delete entry.  Please contact support.
      </p>
      {{/if}}
    {{/modal.body}}
    {{#modal.footer}}
      {{#bs-button onClick=(action modal.close) type="default"}}Cancel{{/bs-button}}
      {{#bs-button type='danger' onClick=(perform deleteEntry)}}
        {{#if deleteEntry.isRunning}}
          Deleting {{fa-icon "spinner" spin=true}}
        {{else}}
          Delete Entry
        {{/if}}
      {{/bs-button}}
    {{/modal.footer}}
  {{/bs-modal}}
</section>
<section>
  {{#bs-modal
    open=submitEntryModal
    onHidden=(pipe-action (action (mut submitEntryModal) false) (action (mut submitEntryModalError) false))
    as |modal|
  }}
    {{#modal.header}}
      <h4>Submit Entry</h4>
    {{/modal.header}}
    {{#modal.body}}
      <p>
        This will submit the entry for {{model.group.name}}.  It can not be undone.
      </p>
      {{#if submitEntryModalError}}
      <p class='text-danger'>
        Could not submit entry.  Please contact support.
      </p>
      {{/if}}
    {{/modal.body}}
    {{#modal.footer}}
      {{#bs-button onClick=(action modal.close) type="default"}}Cancel{{/bs-button}}
      {{#bs-button type='primary' onClick=(perform submitEntry)}}
        {{#if submitEntry.isRunning}}
          Submiting {{fa-icon "spinner" spin=true}}
        {{else}}
          Submit Entry
        {{/if}}
      {{/bs-button}}
    {{/modal.footer}}
  {{/bs-modal}}
</section>
<section>
  {{#bs-modal
    open=declineEntryModal
    onHidden=(pipe-action (action (mut declineEntryModal) false) (action (mut declineEntryModalError) false))
    as |modal|
  }}
    {{#modal.header}}
      <h4>Decline Entry</h4>
    {{/modal.header}}
    {{#modal.body}}
      <p>
        This will decline the invitation for {{model.group.name}}.
      </p>
      {{#if submitEntryModalError}}
      <p class='text-danger'>
        Could not decline entry.  Please contact support.
      </p>
      {{/if}}
    {{/modal.body}}
    {{#modal.footer}}
      {{#bs-button onClick=(action modal.close) type="danger"}}Cancel{{/bs-button}}
      {{#bs-button type='primary' onClick=(perform declineEntry)}}
        {{#if declineEntry.isRunning}}
          Declining {{fa-icon "spinner" spin=true}}
        {{else}}
          Decline Entry
        {{/if}}
      {{/bs-button}}
    {{/modal.footer}}
  {{/bs-modal}}
</section>
<section>
  {{#bs-modal
    open=approveEntryModal
    onHidden=(pipe-action (action (mut approveEntryModal) false) (action (mut approveEntryModalError) false))
    as |modal|
  }}
    {{#modal.header}}
      <h4>Approve Entry</h4>
    {{/modal.header}}
    {{#modal.body}}
      <p>
        This will approve the invitation for {{model.group.name}}.
      </p>
      {{#if approveEntryModalError}}
      <p class='text-danger'>
        Could not approve entry.  Please contact support.
      </p>
      {{/if}}
    {{/modal.body}}
    {{#modal.footer}}
      {{#bs-button onClick=(action modal.close) type="success"}}Cancel{{/bs-button}}
      {{#bs-button type='primary' onClick=(perform approveEntry)}}
        {{#if approveEntry.isRunning}}
          Approving {{fa-icon "spinner" spin=true}}
        {{else}}
          Approve Entry
        {{/if}}
      {{/bs-button}}
    {{/modal.footer}}
  {{/bs-modal}}
</section>
<section>
  {{#bs-modal
    open=scratchEntryModal
    onHidden=(pipe-action (action (mut scratchEntryModal) false) (action (mut scratchEntryModalError) false))
    as |modal|
  }}
    {{#modal.header}}
      <h4>Scratch Entry</h4>
    {{/modal.header}}
    {{#modal.body}}
      <p>
        This will scratch the entry for {{model.group.name}}.
      </p>
      {{#if scratchEntryModalError}}
      <p class='text-danger'>
        Could not scratch entry.  Please contact support.
      </p>
      {{/if}}
    {{/modal.body}}
    {{#modal.footer}}
      {{#bs-button onClick=(action modal.close) type="danger"}}Cancel{{/bs-button}}
      {{#bs-button type='primary' onClick=(perform scratchEntry)}}
        {{#if scratchEntry.isRunning}}
          Scratching {{fa-icon "spinner" spin=true}}
        {{else}}
          Scratch Entry
        {{/if}}
      {{/bs-button}}
    {{/modal.footer}}
  {{/bs-modal}}
</section>